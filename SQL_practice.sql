-- Chapter 4 Checkpoints 

-- #1 How many customers have a last name that starts with B? 
SELECT COUNT (LastName)
FROM customers
WHERE LastName  LIKE 'b%'; 

-- #2 Order companies in Desc order 
SELECT Company
FROM customers
ORDER BY Company DESC; 

-- #3 How many customers have no Postal code listed? 
SELECT * 
FROM customers
ORDER BY PostalCode; 
  -- Here is just those: 
SELECT * 
FROM customers
WHERE PostalCode IS NULL;
  -- And here we just count 
SELECT COUNT(CustomerId)
FROM customers
WHERE PostalCode IS NULL;

-- Chapter 5 Checkpoints

-- #1 Add column for if it is Domestic or FOREIGN
SELECT BillingCountry, Total,
CASE 
WHEN BillingCountry = 'USA' THEN 'DOMESTIC'
ELSE 'FOREIGN'
END AS SalesType
FROM invoices;

-- #2 Order this data by Sales type 
SELECT BillingCountry, Total,
CASE 
WHEN BillingCountry = 'USA' THEN 'DOMESTIC'
ELSE 'FOREIGN'
END AS SalesType
FROM invoices
ORDER BY SalesType;

   -- How many of each? 
SELECT COUNT(InvoiceId),
   CASE 
WHEN BillingCountry = 'USA' THEN 'DOMESTIC'
ELSE 'FOREIGN'
END AS SalesType
FROM invoices
GROUP BY SalesType;

  -- What is the cost of each?? 
  SELECT SUM(Total),
   CASE 
WHEN BillingCountry = 'USA' THEN 'DOMESTIC'
ELSE 'FOREIGN'
END AS SalesType
FROM invoices
GROUP BY SalesType;
  

-- #3 How Many invoices from Domestic are under $15? 
SELECT COUNT(InvoiceId),
   CASE 
WHEN BillingCountry = 'USA' THEN 'DOMESTIC'
ELSE 'FOREIGN'
END AS SalesType
FROM invoices
WHERE SalesType = 'DOMESTIC' AND Total > 15;

-- CHAPTER 6 CHECKPOINT

-- #1 What are the foreign keys in the track table? 

SELECT * FROM tracks;
-- From this we can see TrackID, AlbumId, MediaTypeId, and GenreID are INTEGERs so these are KEYs 

-- #2 Create an inner join between albums and tracks to display corresponding artist names, album titles and track names 
SELECT t.name as "Track Name", a.title as "Album Name", t.Composer
FROM tracks as t 
INNER JOIN albums as a 
ON t.AlbumId = a.AlbumId;

SELECT * FROM albums;

-- #3 Add genre to table made in #2 

SELECT * FROM genres;

SELECT t.name as "Track Name", a.title as "Album Name", ar.Name as "Artist Name"
FROM  albums as a 
INNER JOIN tracks as t 
ON t.AlbumId = a.AlbumId
INNER JOIN artists as ar
ON a.ArtistId = ar.ArtistId;

SELECT t.name as "Track Name", a.title as "Album Name", ar.Name as "Artist Name", g.name
FROM  albums as a 
INNER JOIN tracks as t 
ON t.AlbumId = a.AlbumId
INNER JOIN artists as ar
ON a.ArtistId = ar.ArtistId
INNER JOIN genres as g
ON t.GenreId = g.GenreId;

-- CHAPTER 7 CHECKPOINT

-- #1 Create a single line mailing list for all US customers 

SELECT * FROM customers;

SELECT FirstName || ' ' || LastName as 'Customer Full Name', 
Address || ' ' || City || ', ' || State || ' ' || Country || ' ' || PostalCode
FROM customers
WHERE Country = 'USA'; 

-- #2 What are the average annual sales generated by customers from USA from all years of data avaialable 

SELECT * FROM invoices;

SELECT  BillingCountry,  ROUND(AVG(total),2) as 'Average Total Invoice' 
FROM invoices
GROUP BY BillingCountry
ORDER BY 'Average Total Invoice' DESC ;

SELECT  InvoiceDate as year,  ROUND(AVG(total),2) as 'Average Total Invoice' 
FROM invoices
GROUP BY year
 ;

-- #3 What is the  companies all time total sales 

SELECT SUM(Total) FROM invoices;

-- #4 Who are the top ten best customers ? aka top Revenue 

SELECT * FROM customers;

SELECT c.CustomerId, c.FirstName || ' ' || c.LastName as 'Full_name', sum(i.Total) as 'Rev_Total'
FROM customers as c
LEFT JOIN invoices as i 
ON c.CustomerId = i.CustomerId
GROUP BY i.CustomerId
ORDER BY Rev_total DESC
; 

SELECT sum(Total) as 'Rev', CustomerId
FROM invoices 
GROUP BY CustomerId
ORDER BY Rev DESC; 

-- CHAPTER 8 CHECKPOINT

-- #1 How many invoices are above the 2010 average
SELECT Avg(total)
FROM invoices
WHERE InvoiceDate like '2010%';

SELECT count(Total)
FROM invoices 
WHERE Total >= 5.8006;

-- #2 Who are the Customers responsible for these invoices 

Select  DISTINCT(c.FirstName || ' ' || c.LastName)
FROM invoices as i 
INNER JOIN customers as c
ON i.CustomerId = c.CustomerId
WHERE i.Total >= 5.8006;

-- #3 How many of these customers are from USA? 

Select  DISTINCT(c.FirstName || ' ' || c.LastName)
FROM invoices as i 
INNER JOIN customers as c
ON i.CustomerId = c.CustomerId
WHERE i.Total >= 5.8006 AND c.Country='USA';

-- CHAPTER 9 CHECKPOINT 

SELECT BillingCity, AVG(Total) as 'City_Avg', 
	(SELECT avg(Total) from invoices) as 'Global_Avg'
FROM invoices
GROUP BY BillingCity
ORDER BY BillingCity; 

-- #1 Create a view for ^ query 
CREATE VIEW V_city_averages AS 
SELECT BillingCity, AVG(Total) as 'City_Avg', 
	(SELECT avg(Total) from invoices) as 'Global_Avg'
FROM invoices
GROUP BY BillingCity
ORDER BY BillingCity; 
